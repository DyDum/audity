<RulesCIS>
    <Rule id="6.2.1.1">
        <BasePath>/usr/sbin/</BasePath>
        <FileName>auditd</FileName>
        <NonCompliantComment> Auditd packages are not installed, which prevents audit logging from functioning. </NonCompliantComment>
        <CorrectiveComment> Install auditd and its dependencies to enable auditing. </CorrectiveComment>
        <Correction>apt-get install -y auditd</Correction>
        <Verification>dpkg -l | grep -q auditd && echo 0 || echo 1</Verification>
    </Rule>
    <Rule id="6.2.1.2">
        <BasePath>/etc/systemd/system/</BasePath>
        <FileName>auditd.service</FileName>
        <NonCompliantComment> The auditd service is not enabled or running, risking loss of critical audit logs. </NonCompliantComment>
        <CorrectiveComment> Enable and start the auditd service to ensure audit logging is active. </CorrectiveComment>
        <Correction>systemctl enable auditd; systemctl start auditd</Correction>
        <Verification>systemctl is-active auditd | grep -q "active" && echo 0 || echo 1</Verification>
    </Rule>
    <Rule id="6.2.1.3">
        <BasePath>/etc/default/</BasePath>
        <FileName>grub</FileName>
        <NonCompliantComment> Auditing for processes that start before auditd is not enabled, which may cause early events to be missed. </NonCompliantComment>
        <CorrectiveComment> Ensure that the kernel boot parameter "audit=1" is set in the bootloader configuration. </CorrectiveComment>
        <Correction> sed -i 's/\(GRUB_CMDLINE_LINUX="\(.*\)\)"/\1 audit=1"/' /etc/default/grub; update-grub </Correction>
        <Verification> grep -q 'audit=1' /proc/cmdline && echo 0 || echo 1 </Verification>
    </Rule>
    <Rule id="6.2.1.4">
        <BasePath>/etc/audit/</BasePath>
        <FileName>auditd.conf</FileName>
        <NonCompliantComment> The audit backlog limit is set too low, risking loss of audit events during high load. </NonCompliantComment>
        <CorrectiveComment> Set audit_backlog_limit to a sufficient value (e.g., 8192) in /etc/audit/auditd.conf. </CorrectiveComment>
        <Correction> sed -i 's/^#\?audit_backlog_limit.*/audit_backlog_limit = 8192/' /etc/audit/auditd.conf; systemctl restart auditd </Correction>
        <Verification> grep '^audit_backlog_limit = 8192' /etc/audit/auditd.conf && echo 0 || echo 1 </Verification>
    </Rule><Rule id="6.2.2.1">
    <BasePath>/etc/audit/auditd.conf</BasePath>
    <FileName>auditd.conf</FileName>
    <NonCompliantComment>
      Audit log storage size is not configured, risking insufficient space for audit logs.
    </NonCompliantComment>
    <CorrectiveComment>
      Configure the max_log_file parameter in /etc/audit/auditd.conf (for example, set it to 50 MB) to ensure sufficient space for logs.
    </CorrectiveComment>
    <Correction>
      sed -i 's/^#\?max_log_file.*/max_log_file = 50/' /etc/audit/auditd.conf; systemctl restart auditd
    </Correction>
    <Verification>
      grep '^max_log_file = 50' /etc/audit/auditd.conf && echo 0 || echo 1
    </Verification>
    </Rule>
    <Rule id="6.2.2.2">
        <BasePath>/etc/audit/auditd.conf</BasePath>
        <FileName>auditd.conf</FileName>
        <NonCompliantComment>
        Audit logs may be automatically deleted when full, risking loss of critical audit data.
        </NonCompliantComment>
        <CorrectiveComment>
        Ensure that audit logs are not automatically purged by disabling any auto-deletion settings.
        </CorrectiveComment>
        <Correction>
        echo "# Automatic log deletion disabled" >> /etc/audit/auditd.conf; systemctl restart auditd
        </Correction>
        <Verification>
        echo "Manual review required"
        </Verification>
    </Rule>
    <Rule id="6.2.2.3">
        <BasePath>/etc/audit/auditd.conf</BasePath>
        <FileName>auditd.conf</FileName>
        <NonCompliantComment>
        The system is not configured to take action when audit logs are full.
        </NonCompliantComment>
        <CorrectiveComment>
        Configure the space_left_action parameter (e.g., set to email) in /etc/audit/auditd.conf so that an alert is triggered when logs are near capacity.
        </CorrectiveComment>
        <Correction>
        sed -i 's/^#\?space_left_action.*/space_left_action = email/' /etc/audit/auditd.conf; systemctl restart auditd
        </Correction>
        <Verification>
        grep '^space_left_action = email' /etc/audit/auditd.conf && echo 0 || echo 1
        </Verification>
    </Rule>
    <Rule id="6.2.2.4">
        <BasePath>/etc/audit/auditd.conf</BasePath>
        <FileName>auditd.conf</FileName>
        <NonCompliantComment>
        The system does not warn administrators when audit logs are low on space.
        </NonCompliantComment>
        <CorrectiveComment>
        Configure the admin_space_left_action parameter in /etc/audit/auditd.conf to trigger a warning (e.g., exec an alert script) when logs are low on space.
        </CorrectiveComment>
        <Correction>
        sed -i 's/^#\?admin_space_left_action.*/admin_space_left_action = exec/' /etc/audit/auditd.conf; systemctl restart auditd
        </Correction>
        <Verification>
        grep '^admin_space_left_action = exec' /etc/audit/auditd.conf && echo 0 || echo 1
        </Verification>
    </Rule>
    <Rule id="6.2.3.1">
        <BasePath>/etc/audit/rules.d/</BasePath>
        <FileName>audit.rules</FileName>
        <NonCompliantComment>
        Changes to critical system files (e.g., /etc/sudoers) are not being audited.
        </NonCompliantComment>
        <CorrectiveComment>
        Add an audit rule to monitor modifications to /etc/sudoers.
        </CorrectiveComment>
        <Correction>
        echo "-w /etc/sudoers -p wa -k scope" >> /etc/audit/rules.d/audit.rules; augenrules --load
        </Correction>
        <Verification>
        grep -q "\-w /etc/sudoers" /etc/audit/rules.d/audit.rules && echo 0 || echo 1
        </Verification>
    </Rule>
    <Rule id="6.2.3.2">
        <BasePath>/etc/audit/rules.d/</BasePath>
        <FileName>audit.rules</FileName>
        <NonCompliantComment>
        Modifications to /etc/passwd, which may indicate unauthorized user changes, are not being audited.
        </NonCompliantComment>
        <CorrectiveComment>
        Add an audit rule to monitor changes to /etc/passwd.
        </CorrectiveComment>
        <Correction>
        echo "-w /etc/passwd -p wa -k user_modifications" >> /etc/audit/rules.d/audit.rules; augenrules --load
        </Correction>
        <Verification>
        grep -q "\-w /etc/passwd" /etc/audit/rules.d/audit.rules && echo 0 || echo 1
        </Verification>
    </Rule>
    <Rule id="6.2.3.3">
        <BasePath>/etc/audit/rules.d/</BasePath>
        <FileName>audit.rules</FileName>
        <NonCompliantComment>
        Changes to the sudo log file are not being audited.
        </NonCompliantComment>
        <CorrectiveComment>
        Add an audit rule to capture modifications to /var/log/sudo.log.
        </CorrectiveComment>
        <Correction>
        echo "-w /var/log/sudo.log -p wa -k sudo_log" >> /etc/audit/rules.d/audit.rules; augenrules --load
        </Correction>
        <Verification>
        grep -q "\-w /var/log/sudo.log" /etc/audit/rules.d/audit.rules && echo 0 || echo 1
        </Verification>
    </Rule>
    <Rule id="6.2.3.4">
        <BasePath>/etc/audit/rules.d/</BasePath>
        <FileName>audit.rules</FileName>
        <NonCompliantComment>
        Changes to date and time settings (e.g., /etc/localtime) are not being audited.
        </NonCompliantComment>
        <CorrectiveComment>
        Add an audit rule to monitor modifications to /etc/localtime.
        </CorrectiveComment>
        <Correction>
        echo "-w /etc/localtime -p wa -k time_change" >> /etc/audit/rules.d/audit.rules; augenrules --load
        </Correction>
        <Verification>
        grep -q "\-w /etc/localtime" /etc/audit/rules.d/audit.rules && echo 0 || echo 1
        </Verification>
    </Rule>
    <Rule id="6.2.3.5">
        <BasePath>/etc/audit/rules.d/</BasePath>
        <FileName>audit.rules</FileName>
        <NonCompliantComment>
        Modifications to network configuration files are not being audited.
        </NonCompliantComment>
        <CorrectiveComment>
        Add an audit rule to capture modifications to network configuration directories (e.g., /etc/network/).
        </CorrectiveComment>
        <Correction>
        echo "-w /etc/network/ -p wa -k network_change" >> /etc/audit/rules.d/audit.rules; augenrules --load
        </Correction>
        <Verification>
        grep -q "\-w /etc/network/" /etc/audit/rules.d/audit.rules && echo 0 || echo 1
        </Verification>
    </Rule>
    <Rule id="6.2.3.6">
        <BasePath>/etc/audit/rules.d/</BasePath>
        <FileName>audit.rules</FileName>
        <NonCompliantComment>
        The use of privileged commands (e.g., sudo) is not being audited.
        </NonCompliantComment>
        <CorrectiveComment>
        Add an audit rule to capture the execution of privileged commands such as sudo.
        </CorrectiveComment>
        <Correction>
        echo "-w /usr/bin/sudo -p x -k privileged_cmd" >> /etc/audit/rules.d/audit.rules; augenrules --load
        </Correction>
        <Verification>
        grep -q "\-w /usr/bin/sudo" /etc/audit/rules.d/audit.rules && echo 0 || echo 1
        </Verification>
    </Rule>
    <Rule id="6.2.3.7">
        <BasePath>/etc/audit/rules.d/</BasePath>
        <FileName>audit.rules</FileName>
        <NonCompliantComment>
        Unsuccessful file access attempts are not being audited.
        </NonCompliantComment>
        <CorrectiveComment>
        Add an audit rule to capture unsuccessful file access attempts.
        </CorrectiveComment>
        <Correction>
        echo "-a always,exit -F arch=b64 -S open,openat -F exit=-EACCES -k access" >> /etc/audit/rules.d/audit.rules; augenrules --load
        </Correction>
        <Verification>
        grep -q "\-a always,exit" /etc/audit/rules.d/audit.rules && echo 0 || echo 1
        </Verification>
    </Rule>
    <Rule id="6.2.3.8">
        <BasePath>/etc/audit/rules.d/</BasePath>
        <FileName>audit.rules</FileName>
        <NonCompliantComment> Events that modify discretionary access control (DAC) permissions are not being audited, risking undetected unauthorized permission changes. </NonCompliantComment>
        <CorrectiveComment> Add an audit rule to capture modifications to file permissions and ownership. </CorrectiveComment>
        <Correction> echo "-a always,exit -F arch=b64 -S chmod,fchmod,fchmodat,chown,fchown,fchownat -F key=dac_modification" >> /etc/audit/rules.d/audit.rules; augenrules --load </Correction>
        <Verification> grep -q "key=dac_modification" /etc/audit/rules.d/audit.rules && echo 0 || echo 1 </Verification>
    </Rule>
    <Rule id="6.2.3.9">
        <BasePath>/etc/audit/rules.d/</BasePath>
        <FileName>audit.rules</FileName>
        <NonCompliantComment> Events that modify the system's network environment are not being audited, risking undetected unauthorized changes. </NonCompliantComment>
        <CorrectiveComment> Add an audit rule to capture modifications to network configuration files or directories. </CorrectiveComment>
        <Correction> echo "-w /etc/network/ -p wa -k network_modification" >> /etc/audit/rules.d/audit.rules; augenrules --load </Correction>
        <Verification> grep -q "\-w /etc/network/" /etc/audit/rules.d/audit.rules && echo 0 || echo 1 </Verification>
    </Rule>
    <Rule id="6.2.3.10">
        <BasePath>/etc/audit/rules.d/</BasePath>
        <FileName>audit.rules</FileName>
        <NonCompliantComment> Session initiation information is not collected, limiting audit visibility of user logins. </NonCompliantComment>
        <CorrectiveComment> Add an audit rule to capture session initiation events. </CorrectiveComment>
        <Correction> echo "-w /var/log/wtmp -p wa -k session" >> /etc/audit/rules.d/audit.rules; augenrules --load </Correction>
        <Verification> grep -q "\-w /var/log/wtmp" /etc/audit/rules.d/audit.rules && echo 0 || echo 1 </Verification>
    </Rule>
    <Rule id="6.2.3.11">
        <BasePath>/etc/audit/rules.d/</BasePath>
        <FileName>audit.rules</FileName>
        <NonCompliantComment> Login and logout events are not being audited, limiting audit visibility into user sessions. </NonCompliantComment>
        <CorrectiveComment> Add an audit rule to capture login and logout events. </CorrectiveComment>
        <Correction> echo "-w /var/run/utmp -p wa -k session" >> /etc/audit/rules.d/audit.rules; augenrules --load </Correction>
        <Verification> grep -q "\-w /var/run/utmp" /etc/audit/rules.d/audit.rules && echo 0 || echo 1 </Verification>
    </Rule>
    <Rule id="6.2.3.12">
        <BasePath>/etc/audit/rules.d/</BasePath>
        <FileName>audit.rules</FileName>
        <NonCompliantComment> File deletion events are not audited, risking that unauthorized removals may go undetected. </NonCompliantComment>
        <CorrectiveComment> Add an audit rule to capture file deletion events. </CorrectiveComment>
        <Correction> echo "-a always,exit -F arch=b64 -S unlink,unlinkat,rename,renameat -F key=file_deletion" >> /etc/audit/rules.d/audit.rules; augenrules --load </Correction>
        <Verification> grep -q "key=file_deletion" /etc/audit/rules.d/audit.rules && echo 0 || echo 1 </Verification>
    </Rule>
    <Rule id="6.2.3.13">
        <BasePath>/etc/audit/rules.d/</BasePath>
        <FileName>audit.rules</FileName>
        <NonCompliantComment> Events that modify the system's Mandatory Access Controls (MAC) are not audited, risking undetected policy modifications. </NonCompliantComment>
        <CorrectiveComment> Add an audit rule to capture modifications to MAC settings. </CorrectiveComment>
        <Correction> echo "-w /etc/selinux/ -p wa -k mac_modification" >> /etc/audit/rules.d/audit.rules; augenrules --load </Correction>
        <Verification> grep -q "\-w /etc/selinux/" /etc/audit/rules.d/audit.rules && echo 0 || echo 1 </Verification>
    </Rule>
    <Rule id="6.2.3.14">
        <BasePath>/etc/audit/rules.d/</BasePath>
        <FileName>audit.rules</FileName>
        <NonCompliantComment> Attempts to use the chcon command are not audited, risking undetected file context changes. </NonCompliantComment>
        <CorrectiveComment> Add an audit rule to capture both successful and unsuccessful attempts to use chcon. </CorrectiveComment>
        <Correction> echo "-a always,exit -F arch=b64 -S chcon -F key=chcon_usage" >> /etc/audit/rules.d/audit.rules; augenrules --load </Correction>
        <Verification> grep -q "key=chcon_usage" /etc/audit/rules.d/audit.rules && echo 0 || echo 1 </Verification>
    </Rule>
    <Rule id="6.2.3.15">
        <BasePath>/etc/audit/rules.d/</BasePath>
        <FileName>audit.rules</FileName>
        <NonCompliantComment> Attempts to use the setfacl command are not audited, risking unauthorized modifications to file ACLs. </NonCompliantComment>
        <CorrectiveComment> Add an audit rule to capture both successful and unsuccessful attempts to use setfacl. </CorrectiveComment>
        <Correction> echo "-a always,exit -F arch=b64 -S setfacl -F key=setfacl_usage" >> /etc/audit/rules.d/audit.rules; augenrules --load </Correction>
        <Verification> grep -q "key=setfacl_usage" /etc/audit/rules.d/audit.rules && echo 0 || echo 1 </Verification>
    </Rule>
    <Rule id="6.2.3.16">
        <BasePath>/etc/audit/rules.d/</BasePath>
        <FileName>audit.rules</FileName>
        <NonCompliantComment> Attempts to use the chacl command are not audited, risking unauthorized changes to file ACLs. </NonCompliantComment>
        <CorrectiveComment> Add an audit rule to capture both successful and unsuccessful attempts to use chacl. </CorrectiveComment>
        <Correction> echo "-a always,exit -F arch=b64 -S chacl -F key=chacl_usage" >> /etc/audit/rules.d/audit.rules; augenrules --load </Correction>
        <Verification> grep -q "key=chacl_usage" /etc/audit/rules.d/audit.rules && echo 0 || echo 1 </Verification>
    </Rule>
    <Rule id="6.2.3.17">
        <BasePath>/etc/audit/rules.d/</BasePath>
        <FileName>audit.rules</FileName>
        <NonCompliantComment> Attempts to use the usermod command are not audited, risking unauthorized modifications to user accounts. </NonCompliantComment>
        <CorrectiveComment> Add an audit rule to capture both successful and unsuccessful attempts to use usermod. </CorrectiveComment>
        <Correction> echo "-a always,exit -F arch=b64 -S usermod -F key=usermod_usage" >> /etc/audit/rules.d/audit.rules; augenrules --load </Correction>
        <Verification> grep -q "key=usermod_usage" /etc/audit/rules.d/audit.rules && echo 0 || echo 1 </Verification>
    </Rule>
    <Rule id="6.2.3.18">
        <BasePath>/etc/audit/rules.d/</BasePath>
        <FileName>audit.rules</FileName>
        <NonCompliantComment> Events related to kernel module loading, unloading, and modification are not being audited. </NonCompliantComment>
        <CorrectiveComment> Add an audit rule to capture all events that modify kernel modules. </CorrectiveComment>
        <Correction> echo "-a always,exit -F arch=b64 -S init_module,delete_module -F key=kernel_module" >> /etc/audit/rules.d/audit.rules; augenrules --load </Correction>
        <Verification> grep -q "key=kernel_module" /etc/audit/rules.d/audit.rules && echo 0 || echo 1 </Verification>
    </Rule>
    <Rule id="6.2.3.19">
        <BasePath>/etc/audit/rules.d/</BasePath>
        <FileName>immutable.rules</FileName>
        <NonCompliantComment> The audit configuration is mutable, which may allow an attacker to disable auditing. </NonCompliantComment>
        <CorrectiveComment> Set the audit configuration to immutable mode to prevent further modifications. </CorrectiveComment>
        <Correction> echo "-e 2" >> /etc/audit/rules.d/immutable.rules; augenrules --load </Correction>
        <Verification> grep -q "\-e 2" /etc/audit/rules.d/immutable.rules && echo 0 || echo 1 </Verification>
    </Rule>
    <Rule id="6.2.3.20">
        <BasePath>/etc/audit/</BasePath>
        <FileName>audit.rules</FileName>
        <NonCompliantComment> The running audit configuration does not match the on-disk configuration, risking discrepancies in audit logging. </NonCompliantComment>
        <CorrectiveComment> Verify that the in-memory audit configuration matches the on-disk rules. </CorrectiveComment>
        <Correction> echo "Manual verification required: compare output of 'auditctl -l' with /etc/audit/rules.d/*" </Correction>
        <Verification> echo "Manual verification required" </Verification>
    </Rule>
    <Rule id="6.2.3.21">
        <BasePath>/etc/audit/</BasePath>
        <FileName>audit.rules</FileName>
        <NonCompliantComment> The running audit configuration does not match the on-disk configuration, risking discrepancies in audit logging. </NonCompliantComment>
        <CorrectiveComment> Verify that the in-memory audit configuration exactly matches the configuration stored on disk to ensure audit integrity. </CorrectiveComment>
        <Correction> echo "Manual verification required: compare the output of 'auditctl -l' with the files in /etc/audit/rules.d/." </Correction>
        <Verification> echo "Manual verification required" </Verification>
    </Rule>
    <Rule id="6.2.4.1">
        <BasePath>/var/log/audit</BasePath>
        <FileName>audit_logs</FileName>
        <NonCompliantComment> Audit log files do not have secure file modes, risking unauthorized access. </NonCompliantComment>
        <CorrectiveComment> Set the file mode for all audit log files to 0600. </CorrectiveComment>
        <Correction> find /var/log/audit -type f -exec chmod 600 {} \; </Correction>
        <Verification> for file in $(find /var/log/audit -type f); do stat -c "%a" "$file" | grep -q "^600$" || exit 1; done; echo 0 </Verification>
    </Rule>
    <Rule id="6.2.4.2">
        <BasePath>/var/log/audit</BasePath>
        <FileName>audit_logs</FileName>
        <NonCompliantComment> Audit log files are not owned by root. </NonCompliantComment>
        <CorrectiveComment> Ensure that all audit log files are owned by root. </CorrectiveComment>
        <Correction> chown -R root:root /var/log/audit </Correction>
        <Verification> find /var/log/audit -type f | xargs -I {} stat -c "%U" {} | grep -q "^root$" && echo 0 || echo 1 </Verification>
    </Rule>
    <Rule id="6.2.4.3">
        <BasePath>/var/log/audit</BasePath>
        <FileName>audit_logs</FileName>
        <NonCompliantComment> Audit log files are not group-owned by root. </NonCompliantComment>
        <CorrectiveComment> Ensure that all audit log files are group-owned by root. </CorrectiveComment>
        <Correction> chgrp -R root /var/log/audit </Correction>
        <Verification> find /var/log/audit -type f | xargs -I {} stat -c "%G" {} | grep -q "^root$" && echo 0 || echo 1 </Verification>
    </Rule>
    <Rule id="6.2.4.4">
        <BasePath>/var/log/audit</BasePath>
        <FileName>audit_directory</FileName>
        <NonCompliantComment> The audit log directory does not have secure permissions. </NonCompliantComment>
        <CorrectiveComment> Set the audit log directory permissions to 0700. </CorrectiveComment>
        <Correction> chmod 700 /var/log/audit </Correction>
        <Verification> stat -c "%a" /var/log/audit | grep -q "^700$" && echo 0 || echo 1 </Verification>
    </Rule>
    <Rule id="6.2.4.5">
        <BasePath>/etc/audit/</BasePath>
        <FileName>auditd.conf audit.rules</FileName>
        <NonCompliantComment> Audit configuration files do not have secure file modes. </NonCompliantComment>
        <CorrectiveComment> Set the file mode of audit configuration files to 0600. </CorrectiveComment>
        <Correction> chmod 600 /etc/audit/auditd.conf /etc/audit/audit.rules; systemctl restart auditd </Correction>
        <Verification> (stat -c "%a" /etc/audit/auditd.conf | grep -q "^600$" && stat -c "%a" /etc/audit/audit.rules | grep -q "^600$") && echo 0 || echo 1 </Verification>
    </Rule>
    <Rule id="6.2.4.6">
        <BasePath>/etc/audit/</BasePath>
        <FileName>auditd.conf audit.rules</FileName>
        <NonCompliantComment> Audit configuration files are not owned by root. </NonCompliantComment>
        <CorrectiveComment> Ensure that audit configuration files are owned by root. </CorrectiveComment>
        <Correction> chown root:root /etc/audit/auditd.conf /etc/audit/audit.rules; systemctl restart auditd </Correction>
        <Verification> (stat -c "%U" /etc/audit/auditd.conf | grep -q "^root$" && stat -c "%U" /etc/audit/audit.rules | grep -q "^root$") && echo 0 || echo 1 </Verification>
    </Rule>
    <Rule id="6.2.4.7">
        <BasePath>/etc/audit/</BasePath>
        <FileName>auditd.conf audit.rules</FileName>
        <NonCompliantComment> Audit configuration files are not group-owned by root. </NonCompliantComment>
        <CorrectiveComment> Ensure that audit configuration files are group-owned by root. </CorrectiveComment>
        <Correction> chgrp root /etc/audit/auditd.conf /etc/audit/audit.rules; systemctl restart auditd </Correction>
        <Verification> (stat -c "%G" /etc/audit/auditd.conf | grep -q "^root$" && stat -c "%G" /etc/audit/audit.rules | grep -q "^root$") && echo 0 || echo 1 </Verification>
    </Rule>
    <Rule id="6.2.4.8">
        <BasePath>/usr/sbin/</BasePath>
        <FileName>auditctl ausearch</FileName>
        <NonCompliantComment> Audit tools do not have secure file permissions. </NonCompliantComment>
        <CorrectiveComment> Set the file permissions of auditctl and ausearch to 0600. </CorrectiveComment>
        <Correction> chmod 600 /usr/sbin/auditctl /usr/sbin/ausearch </Correction>
        <Verification> (stat -c "%a" /usr/sbin/auditctl | grep -q "^600$" && stat -c "%a" /usr/sbin/ausearch | grep -q "^600$") && echo 0 || echo 1 </Verification>
    </Rule>
    <Rule id="6.2.4.9">
        <BasePath>/usr/sbin/</BasePath>
        <FileName>auditctl ausearch</FileName>
        <NonCompliantComment> Audit tools are not owned by root, risking unauthorized modification of these critical utilities. </NonCompliantComment>
        <CorrectiveComment> Ensure that audit tools such as auditctl and ausearch are owned by root. </CorrectiveComment>
        <Correction> chown root:root /usr/sbin/auditctl /usr/sbin/ausearch </Correction>
        <Verification> (stat -c "%U" /usr/sbin/auditctl | grep -q "^root$" && stat -c "%U" /usr/sbin/ausearch | grep -q "^root$") && echo 0 || echo 1 </Verification>
    </Rule>
    <Rule id="6.2.4.10">
        <BasePath>/usr/sbin/</BasePath>
        <FileName>auditctl ausearch</FileName>
        <NonCompliantComment> Audit tools are not group-owned by root, which may permit unauthorized users to modify these tools. </NonCompliantComment>
        <CorrectiveComment> Ensure that auditctl and ausearch are group-owned by root. </CorrectiveComment>
        <Correction> chgrp root /usr/sbin/auditctl /usr/sbin/ausearch </Correction>
        <Verification> (stat -c "%G" /usr/sbin/auditctl | grep -q "^root$" && stat -c "%G" /usr/sbin/ausearch | grep -q "^root$") && echo 0 || echo 1 </Verification>
    </Rule>
</RulesCIS>