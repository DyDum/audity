<RulesCIS>
  <Rule id="5.1.1">
    <Name>Ensure Access Is Restricted by IP Address (Automated)</Name>
    <Chapter id="5">HTTP Headers Hardening</Chapter>
    <Section id="5.1.1">Ensure Access Is Restricted by IP Address</Section>
    <Profiles>
      <Profile level="2" type="Webserver"/>
      <Profile level="2" type="Proxy"/>
      <Profile level="2" type="LoadBalancer"/>
    </Profiles>
    <BasePath>/etc/nginx/</BasePath>
    <FileName>nginx.conf</FileName>
    <NonCompliantComment>Access to the server is not restricted by IP addresses, allowing unauthorized access.</NonCompliantComment>
    <CorrectiveComment>Use allow and deny directives to restrict access to specific IP addresses.</CorrectiveComment>
    <Correction>echo 'allow 192.168.1.0/24; deny all;' &gt;&gt; /etc/nginx/nginx.conf</Correction>
    <Verification>nginx -T | grep -q 'allow 192.168.1.0/24;' &amp;&amp; echo 0 || echo 1</Verification>
    <Manual>NO</Manual>
  </Rule>

  <Rule id="5.1.2">
    <Name>Ensure HTTP Methods Are Restricted (Automated)</Name>
    <Chapter id="5">HTTP Headers Hardening</Chapter>
    <Section id="5.1.2">Ensure HTTP Methods Are Restricted</Section>
    <Profiles>
      <Profile level="1" type="Webserver"/>
      <Profile level="1" type="Proxy"/>
      <Profile level="1" type="LoadBalancer"/>
    </Profiles>
    <BasePath>/etc/nginx/</BasePath>
    <FileName>nginx.conf</FileName>
    <NonCompliantComment>All HTTP methods are allowed, including potentially dangerous methods (e.g., DELETE, TRACE).</NonCompliantComment>
    <CorrectiveComment>Restrict HTTP methods to only those required (e.g., GET, POST, HEAD).</CorrectiveComment>
    <Correction>echo 'limit_except GET POST HEAD { deny all; }' &gt;&gt; /etc/nginx/nginx.conf</Correction>
    <Verification>nginx -T | grep -q 'limit_except GET POST HEAD' &amp;&amp; echo 0 || echo 1</Verification>
    <Manual>NO</Manual>
  </Rule>

  <Rule id="5.2.1">
    <Name>Ensure Client Request Timeouts Are Set Appropriately (Automated)</Name>
    <Chapter id="5">HTTP Headers Hardening</Chapter>
    <Section id="5.2.1">Ensure Client Request Timeouts Are Set Appropriately</Section>
    <Profiles>
      <Profile level="1" type="Webserver"/>
      <Profile level="1" type="Proxy"/>
      <Profile level="1" type="LoadBalancer"/>
    </Profiles>
    <BasePath>/etc/nginx/</BasePath>
    <FileName>nginx.conf</FileName>
    <NonCompliantComment>The timeout values for reading the client header and body are not set, which may allow DoS attacks.</NonCompliantComment>
    <CorrectiveComment>Set the client header and body timeout values to reasonable values (e.g., 10s).</CorrectiveComment>
    <Correction>echo 'client_header_timeout 10s; client_body_timeout 10s;' &gt;&gt; /etc/nginx/nginx.conf</Correction>
    <Verification>nginx -T | grep -q 'client_header_timeout 10s;' &amp;&amp; echo 0 || echo 1</Verification>
    <Manual>NO</Manual>
  </Rule>

  <Rule id="5.2.2">
    <Name>Ensure Request Body Size Is Limited (Automated)</Name>
    <Chapter id="5">HTTP Headers Hardening</Chapter>
    <Section id="5.2.2">Ensure Request Body Size Is Limited</Section>
    <Profiles>
      <Profile level="1" type="Webserver"/>
      <Profile level="1" type="Proxy"/>
      <Profile level="1" type="LoadBalancer"/>
    </Profiles>
    <BasePath>/etc/nginx/</BasePath>
    <FileName>nginx.conf</FileName>
    <NonCompliantComment>The maximum request body size is not defined, which may allow large payloads and DoS attacks.</NonCompliantComment>
    <CorrectiveComment>Set the maximum request body size to a reasonable value (e.g., 1M).</CorrectiveComment>
    <Correction>echo 'client_max_body_size 1M;' &gt;&gt; /etc/nginx/nginx.conf</Correction>
    <Verification>nginx -T | grep -q 'client_max_body_size 1M;' &amp;&amp; echo 0 || echo 1</Verification>
    <Manual>NO</Manual>
  </Rule>

  <Rule id="5.2.3">
    <Name>Ensure URI Buffer Sizes Are Limited (Automated)</Name>
    <Chapter id="5">HTTP Headers Hardening</Chapter>
    <Section id="5.2.3">Ensure URI Buffer Sizes Are Limited</Section>
    <Profiles>
      <Profile level="1" type="Webserver"/>
      <Profile level="1" type="Proxy"/>
      <Profile level="1" type="LoadBalancer"/>
    </Profiles>
    <BasePath>/etc/nginx/</BasePath>
    <FileName>nginx.conf</FileName>
    <NonCompliantComment>The URI buffer size is not defined, which may allow buffer overflow attacks.</NonCompliantComment>
    <CorrectiveComment>Set the maximum buffer size for URIs (e.g., 1k).</CorrectiveComment>
    <Correction>echo 'large_client_header_buffers 4 1k;' &gt;&gt; /etc/nginx/nginx.conf</Correction>
    <Verification>nginx -T | grep -q 'large_client_header_buffers 4 1k;' &amp;&amp; echo 0 || echo 1</Verification>
    <Manual>NO</Manual>
  </Rule>

  <Rule id="5.2.4">
    <Name>Ensure Connection Limits Are Configured (Automated)</Name>
    <Chapter id="5">HTTP Headers Hardening</Chapter>
    <Section id="5.2.4">Ensure Connection Limits Are Configured</Section>
    <Profiles>
      <Profile level="2" type="Webserver"/>
      <Profile level="2" type="Proxy"/>
      <Profile level="2" type="LoadBalancer"/>
    </Profiles>
    <BasePath>/etc/nginx/</BasePath>
    <FileName>nginx.conf</FileName>
    <NonCompliantComment>Connection limits per IP are not set, allowing unlimited connections per client and increasing DoS risk.</NonCompliantComment>
    <CorrectiveComment>Limit the number of connections per IP using the limit_conn_zone and limit_conn directives.</CorrectiveComment>
    <Correction>echo 'limit_conn_zone $binary_remote_addr zone=conn_zone:10m; limit_conn conn_zone 10;' &gt;&gt; /etc/nginx/nginx.conf</Correction>
    <Verification>nginx -T | grep -q 'limit_conn conn_zone' &amp;&amp; echo 0 || echo 1</Verification>
    <Manual>NO</Manual>
  </Rule>

  <Rule id="5.2.5">
    <Name>Ensure Request Rate Limits Are Configured (Automated)</Name>
    <Chapter id="5">HTTP Headers Hardening</Chapter>
    <Section id="5.2.5">Ensure Request Rate Limits Are Configured</Section>
    <Profiles>
      <Profile level="2" type="Webserver"/>
      <Profile level="2" type="Proxy"/>
      <Profile level="2" type="LoadBalancer"/>
    </Profiles>
    <BasePath>/etc/nginx/</BasePath>
    <FileName>nginx.conf</FileName>
    <NonCompliantComment>Request rate limits are not set, allowing clients to send unlimited requests and increasing DoS risk.</NonCompliantComment>
    <CorrectiveComment>Limit the request rate per IP using the limit_req_zone and limit_req directives.</CorrectiveComment>
    <Correction>echo 'limit_req_zone $binary_remote_addr zone=req_zone:10m rate=1r/s; limit_req zone=req_zone burst=5 nodelay;' &gt;&gt; /etc/nginx/nginx.conf</Correction>
    <Verification>nginx -T | grep -q 'limit_req zone=req_zone' &amp;&amp; echo 0 || echo 1</Verification>
    <Manual>NO</Manual>
  </Rule>

  <Rule id="5.3.1">
    <Name>Ensure X-Frame-Options Header Is Configured (Automated)</Name>
    <Chapter id="5">HTTP Headers Hardening</Chapter>
    <Section id="5.3.1">Ensure X-Frame-Options Header Is Configured</Section>
    <Profiles>
      <Profile level="1" type="Webserver"/>
    </Profiles>
    <BasePath>/etc/nginx/</BasePath>
    <FileName>nginx.conf</FileName>
    <NonCompliantComment>The X-Frame-Options header is not set, allowing the website to be embedded in iframes, which can lead to clickjacking attacks.</NonCompliantComment>
    <CorrectiveComment>Configure the X-Frame-Options header to "DENY" or "SAMEORIGIN" to prevent clickjacking attacks.</CorrectiveComment>
    <Correction>echo 'add_header X-Frame-Options "SAMEORIGIN";' &gt;&gt; /etc/nginx/nginx.conf</Correction>
    <Verification>nginx -T | grep -q 'X-Frame-Options' &amp;&amp; echo 0 || echo 1</Verification>
    <Manual>NO</Manual>
  </Rule>

  <Rule id="5.3.2">
    <Name>Ensure X-Content-Type-Options Header Is Configured (Automated)</Name>
    <Chapter id="5">HTTP Headers Hardening</Chapter>
    <Section id="5.3.2">Ensure X-Content-Type-Options Header Is Configured</Section>
    <Profiles>
      <Profile level="1" type="Webserver"/>
    </Profiles>
    <BasePath>/etc/nginx/</BasePath>
    <FileName>nginx.conf</FileName>
    <NonCompliantComment>The X-Content-Type-Options header is not set, which can allow MIME type sniffing by the browser.</NonCompliantComment>
    <CorrectiveComment>Configure the X-Content-Type-Options header to "nosniff" to prevent MIME type sniffing.</CorrectiveComment>
    <Correction>echo 'add_header X-Content-Type-Options "nosniff";' &gt;&gt; /etc/nginx/nginx.conf</Correction>
    <Verification>nginx -T | grep -q 'X-Content-Type-Options' &amp;&amp; echo 0 || echo 1</Verification>
    <Manual>NO</Manual>
  </Rule>

  <Rule id="5.3.3">
    <Name>Ensure Content-Security-Policy Header Is Configured (Automated)</Name>
    <Chapter id="5">HTTP Headers Hardening</Chapter>
    <Section id="5.3.3">Ensure Content-Security-Policy Header Is Configured</Section>
    <Profiles>
      <Profile level="2" type="Webserver"/>
    </Profiles>
    <BasePath>/etc/nginx/</BasePath>
    <FileName>nginx.conf</FileName>
    <NonCompliantComment>The Content Security Policy (CSP) is not enabled, increasing the risk of cross-site scripting (XSS) and data injection attacks.</NonCompliantComment>
    <CorrectiveComment>Enable and configure a strict Content Security Policy (CSP) header.</CorrectiveComment>
    <Correction>echo 'add_header Content-Security-Policy "default-src 'self';";' &gt;&gt; /etc/nginx/nginx.conf</Correction>
    <Verification>nginx -T | grep -q 'Content-Security-Policy' &amp;&amp; echo 0 || echo 1</Verification>
    <Manual>NO</Manual>
  </Rule>

  <Rule id="5.3.4">
    <Name>Ensure Referrer-Policy Header Is Configured (Automated)</Name>
    <Chapter id="5">HTTP Headers Hardening</Chapter>
    <Section id="5.3.4">Ensure Referrer-Policy Header Is Configured</Section>
    <Profiles>
      <Profile level="2" type="Webserver"/>
    </Profiles>
    <BasePath>/etc/nginx/</BasePath>
    <FileName>nginx.conf</FileName>
    <NonCompliantComment>The Referrer-Policy header is not set, allowing the referrer information to be exposed to external websites.</NonCompliantComment>
    <CorrectiveComment>Configure the Referrer-Policy header to "no-referrer" or "strict-origin" to limit referrer information exposure.</CorrectiveComment>
    <Correction>echo 'add_header Referrer-Policy "no-referrer";' &gt;&gt; /etc/nginx/nginx.conf</Correction>
    <Verification>nginx -T | grep -q 'Referrer-Policy' &amp;&amp; echo 0 || echo 1</Verification>
    <Manual>NO</Manual>
  </Rule>
</RulesCIS>
