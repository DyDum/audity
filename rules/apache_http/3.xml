<RulesCIS>
  <Rule id="3.1">
    <Name>Ensure Apache does not run as root (Automated)</Name>
    <Chapter id="3">Permissions and Ownership</Chapter>
    <Section id="3.1">User and Group Settings</Section>
    <SubSection id="3.1.1">Apache User and Group Configuration</SubSection>

    <Profiles>
      <Profile level="1" type="Server"/>
    </Profiles>
    <BasePath>/etc/httpd/conf</BasePath>
    <FileName>httpd.conf</FileName>
    <NonCompliantComment>Apache is running as root.</NonCompliantComment>
    <CorrectiveComment>Set the User and Group directives to a non-root user.</CorrectiveComment>
    <Correction>sed -i 's/^User .*/User apache/' /etc/httpd/conf/httpd.conf; sed -i 's/^Group .*/Group apache/' /etc/httpd/conf/httpd.conf</Correction>
    <Verification>grep '^User apache' /etc/httpd/conf/httpd.conf &amp;&amp; grep '^Group apache' /etc/httpd/conf/httpd.conf &amp;&amp; echo 0 || echo 1</Verification>
    <Manual>NO</Manual>
  </Rule>

  <Rule id="3.2">
    <Name>Ensure Apache user shell is set to /sbin/nologin (Automated)</Name>
    <Chapter id="3">Permissions and Ownership</Chapter>
    <Section id="3.1">User and Group Settings</Section>
    <SubSection id="3.1.2">Apache User Shell</SubSection>

    <Profiles>
      <Profile level="1" type="Server"/>
    </Profiles>
    <BasePath>/etc</BasePath>
    <FileName>passwd</FileName>
    <NonCompliantComment>The Apache user has a valid login shell.</NonCompliantComment>
    <CorrectiveComment>Change the Apache user shell to /sbin/nologin.</CorrectiveComment>
    <Correction>chsh -s /sbin/nologin apache</Correction>
    <Verification>grep '^apache:' /etc/passwd | grep -q '/sbin/nologin' &amp;&amp; echo 0 || echo 1</Verification>
    <Manual>NO</Manual>
  </Rule>

  <Rule id="3.3">
    <Name>Ensure Apache user account is locked (Automated)</Name>
    <Chapter id="3">Permissions and Ownership</Chapter>
    <Section id="3.1">User and Group Settings</Section>
    <SubSection id="3.1.3">Apache User Account Lock</SubSection>

    <Profiles>
      <Profile level="1" type="Server"/>
    </Profiles>
    <BasePath>/etc</BasePath>
    <FileName>passwd</FileName>
    <NonCompliantComment>The Apache user account is not locked.</NonCompliantComment>
    <CorrectiveComment>Lock the Apache user account.</CorrectiveComment>
    <Correction>passwd -l apache</Correction>
    <Verification>passwd -S apache | grep -q 'LK' &amp;&amp; echo 0 || echo 1</Verification>
    <Manual>NO</Manual>
  </Rule>

  <Rule id="3.4">
    <Name>Ensure Apache directories and files are owned by root (Automated)</Name>
    <Chapter id="3">Permissions and Ownership</Chapter>
    <Section id="3.2">File Ownership</Section>
    <SubSection id="3.2.1">Apache Directory Ownership</SubSection>

    <Profiles>
      <Profile level="1" type="Server"/>
    </Profiles>
    <BasePath>/usr/local/apache2</BasePath>
    <FileName>ApacheDirectories</FileName>
    <NonCompliantComment>Some Apache directories and files are not owned by root.</NonCompliantComment>
    <CorrectiveComment>Change ownership of all Apache directories and files to root.</CorrectiveComment>
    <Correction>chown -R root:root /usr/local/apache2</Correction>
    <Verification>find /usr/local/apache2 ! -user root -print | grep -q . &amp;&amp; echo 1 || echo 0</Verification>
    <Manual>NO</Manual>
  </Rule>

  <Rule id="3.5">
    <Name>Ensure Apache directories have group ownership set to root (Automated)</Name>
    <Chapter id="3">Permissions and Ownership</Chapter>
    <Section id="3.2">File Ownership</Section>
    <SubSection id="3.2.2">Group Ownership</SubSection>

    <Profiles>
      <Profile level="1" type="Server"/>
    </Profiles>
    <BasePath>/usr/local/apache2</BasePath>
    <FileName>ApacheDirectories</FileName>
    <NonCompliantComment>Apache directories and files do not have group ownership set to root.</NonCompliantComment>
    <CorrectiveComment>Set group ownership of Apache directories and files to root.</CorrectiveComment>
    <Correction>chgrp -R root /usr/local/apache2</Correction>
    <Verification>find /usr/local/apache2 ! -group root -print | grep -q . &amp;&amp; echo 1 || echo 0</Verification>
    <Manual>NO</Manual>
  </Rule>

  <Rule id="3.6">
    <Name>Ensure other write permissions are removed from Apache files (Automated)</Name>
    <Chapter id="3">Permissions and Ownership</Chapter>
    <Section id="3.3">File Permissions</Section>
    <SubSection id="3.3.1">Other Write Access</SubSection>

    <Profiles>
      <Profile level="1" type="Server"/>
    </Profiles>
    <BasePath>/usr/local/apache2</BasePath>
    <FileName>ApacheDirectories</FileName>
    <NonCompliantComment>Other write access is enabled on Apache directories and files.</NonCompliantComment>
    <CorrectiveComment>Remove write permissions for others from Apache directories and files.</CorrectiveComment>
    <Correction>chmod -R o-w /usr/local/apache2</Correction>
    <Verification>find /usr/local/apache2 -perm /o=w | grep -q . &amp;&amp; echo 1 || echo 0</Verification>
    <Manual>NO</Manual>
  </Rule>

  <Rule id="3.7">
    <Name>Ensure CoreDumpDirectory is securely configured (Automated)</Name>
    <Chapter id="3">Permissions and Ownership</Chapter>
    <Section id="3.4">Core Dumps</Section>
    <SubSection id="3.4.1">CoreDumpDirectory</SubSection>

    <Profiles>
      <Profile level="1" type="Server"/>
    </Profiles>
    <BasePath>/etc/httpd/conf</BasePath>
    <FileName>httpd.conf</FileName>
    <NonCompliantComment>The CoreDumpDirectory is not set to a secure directory.</NonCompliantComment>
    <CorrectiveComment>Configure CoreDumpDirectory to a secure directory owned by root with 700 permissions.</CorrectiveComment>
    <Correction>sed -i 's/^#\?CoreDumpDirectory.*/CoreDumpDirectory "/var/log/apache_coredumps"/' /etc/httpd/conf/httpd.conf; mkdir -p /var/log/apache_coredumps; chown root:root /var/log/apache_coredumps; chmod 700 /var/log/apache_coredumps</Correction>
    <Verification>grep '^CoreDumpDirectory "/var/log/apache_coredumps"' /etc/httpd/conf/httpd.conf &amp;&amp; stat -c '%a' /var/log/apache_coredumps | grep -q '^700$' &amp;&amp; echo 0 || echo 1</Verification>
    <Manual>NO</Manual>
  </Rule>

  <Rule id="3.8">
    <Name>Ensure lock file directory is secure (Automated)</Name>
    <Chapter id="3">Permissions and Ownership</Chapter>
    <Section id="3.5">Lock Files</Section>
    <SubSection id="3.5.1">Lock Directory Permissions</SubSection>

    <Profiles>
      <Profile level="1" type="Server"/>
    </Profiles>
    <BasePath>/var/log</BasePath>
    <FileName>apache_lock</FileName>
    <NonCompliantComment>The lock file directory is not secure.</NonCompliantComment>
    <CorrectiveComment>Ensure the lock file directory is owned by root and set to 700 permissions.</CorrectiveComment>
    <Correction>chown root:root /var/log/apache; chmod 700 /var/log/apache</Correction>
    <Verification>stat -c '%a' /var/log/apache | grep -q '^700$' &amp;&amp; echo 0 || echo 1</Verification>
    <Manual>NO</Manual>
  </Rule>

  <Rule id="3.9">
    <Name>Ensure PID file directory is secure (Automated)</Name>
    <Chapter id="3">Permissions and Ownership</Chapter>
    <Section id="3.6">PID Files</Section>
    <SubSection id="3.6.1">PID File Directory Permissions</SubSection>

    <Profiles>
      <Profile level="1" type="Server"/>
    </Profiles>
    <BasePath>/var/run</BasePath>
    <FileName>httpd.pid</FileName>
    <NonCompliantComment>The directory for the PID file is not secure.</NonCompliantComment>
    <CorrectiveComment>Ensure the directory containing the PID file is owned by root and set to 700 permissions.</CorrectiveComment>
    <Correction>chown root:root /var/run/httpd; chmod 700 /var/run/httpd</Correction>
    <Verification>stat -c '%a' /var/run/httpd | grep -q '^700$' &amp;&amp; echo 0 || echo 1</Verification>
    <Manual>NO</Manual>
  </Rule>

  <Rule id="3.10">
    <Name>Ensure ScoreBoard file is securely configured (Automated)</Name>
    <Chapter id="3">Permissions and Ownership</Chapter>
    <Section id="3.7">ScoreBoard Files</Section>
    <SubSection id="3.7.1">ScoreBoardFile Permissions</SubSection>

    <Profiles>
      <Profile level="1" type="Server"/>
    </Profiles>
    <BasePath>/etc/httpd/conf</BasePath>
    <FileName>httpd.conf</FileName>
    <NonCompliantComment>The ScoreBoard file is located in an insecure directory.</NonCompliantComment>
    <CorrectiveComment>Configure the ScoreBoard file to reside in a secure directory owned by root with 700 permissions.</CorrectiveComment>
    <Correction>sed -i 's/^ScoreBoardFile .*/ScoreBoardFile "/var/log/apache_scoreboard"/' /etc/httpd/conf/httpd.conf; mkdir -p /var/log/apache_scoreboard; chown root:root /var/log/apache_scoreboard; chmod 700 /var/log/apache_scoreboard</Correction>
    <Verification>grep '^ScoreBoardFile "/var/log/apache_scoreboard"' /etc/httpd/conf/httpd.conf &amp;&amp; stat -c '%a' /var/log/apache_scoreboard | grep -q '^700$' &amp;&amp; echo 0 || echo 1</Verification>
    <Manual>NO</Manual>
  </Rule>

  <Rule id="3.11">
    <Name>Ensure group write permissions are removed from Apache files (Automated)</Name>
    <Chapter id="3">Permissions and Ownership</Chapter>
    <Section id="3.8">File Permissions</Section>
    <SubSection id="3.8.1">Group Write Access</SubSection>

    <Profiles>
      <Profile level="1" type="Server"/>
    </Profiles>
    <BasePath>/usr/local/apache2</BasePath>
    <FileName>ApacheDirectories</FileName>
    <NonCompliantComment>Apache directories and files have group write permissions.</NonCompliantComment>
    <CorrectiveComment>Remove group write permissions from Apache directories and files.</CorrectiveComment>
    <Correction>find /usr/local/apache2 -type d -perm /g=w -exec chmod g-w {} \; ; find /usr/local/apache2 -type f -perm /g=w -exec chmod g-w {} \;</Correction>
    <Verification>find /usr/local/apache2 -perm /g=w | grep -q . &amp;&amp; echo 1 || echo 0</Verification>
    <Manual>NO</Manual>
  </Rule>

  <Rule id="3.12">
    <Name>Ensure DocumentRoot files have no group write permissions (Automated)</Name>
    <Chapter id="3">Permissions and Ownership</Chapter>
    <Section id="3.9">DocumentRoot Permissions</Section>
    <SubSection id="3.9.1">DocumentRoot Group Write Access</SubSection>

    <Profiles>
      <Profile level="1" type="Server"/>
    </Profiles>
    <BasePath>/var/www/html</BasePath>
    <FileName>DocumentRoot</FileName>
    <NonCompliantComment>The Document Root directories and files have inappropriate group write access.</NonCompliantComment>
    <CorrectiveComment>Remove group write permissions from Document Root directories and files.</CorrectiveComment>
    <Correction>find /var/www/html -type d -perm /g=w -exec chmod g-w {} \; ; find /var/www/html -type f -perm /g=w -exec chmod g-w {} \;</Correction>
    <Verification>find /var/www/html -perm /g=w | grep -q . &amp;&amp; echo 1 || echo 0</Verification>
    <Manual>NO</Manual>
  </Rule>

  <Rule id="3.13">
    <Name>Ensure application writable directories are restricted (Automated)</Name>
    <Chapter id="3">Permissions and Ownership</Chapter>
    <Section id="3.10">Application Writable Directories</Section>
    <SubSection id="3.10.1">Application Writable Directories Permissions</SubSection>

    <Profiles>
      <Profile level="1" type="Server"/>
    </Profiles>
    <BasePath>/var/app_data</BasePath>
    <FileName>WritableDirectories</FileName>
    <NonCompliantComment>Application writable directories are not properly restricted.</NonCompliantComment>
    <CorrectiveComment>Ensure that writable directories for applications are located outside the DocumentRoot, owned by root, and set with 750 permissions.</CorrectiveComment>
    <Correction>chown root:root /var/app_data; chmod 750 /var/app_data</Correction>
    <Verification>stat -c '%a' /var/app_data | grep -q '^750$' &amp;&amp; echo 0 || echo 1</Verification>
    <Manual>NO</Manual>
  </Rule>
</RulesCIS>
