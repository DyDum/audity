<RulesCIS>
  <Rule id="3.1">
    <Name>Ensure 'Server Authentication' is set to 'Windows Authentication Mode'</Name>
    <Chapter id="3">3 Authentication and Authorization</Chapter>
    <Profiles>
      <Profile level="1" type="Database Engine"/>
    </Profiles>
    <BasePath>N/A</BasePath>
    <FileName>N/A</FileName>
    <NonCompliantComment>The 'Server Authentication' property is not set to 'Windows Authentication Mode'.</NonCompliantComment>
    <CorrectiveComment>Set the 'Server Authentication' property to 'Windows Authentication Mode'.</CorrectiveComment>
    <Correction>ALTER LOGIN [sa] DISABLE;</Correction>
    <Verification>SELECT SERVERPROPERTY('IsIntegratedSecurityOnly');</Verification>
    <Manual>NO</Manual>
  </Rule>

  <Rule id="3.2">
    <Name>Ensure guest user CONNECT permissions are revoked in all databases</Name>
    <Chapter id="3">3 Authentication and Authorization</Chapter>
    <Profiles>
      <Profile level="1" type="Database Engine"/>
      <Profile level="1" type="AWS RDS"/>
    </Profiles>
    <BasePath>N/A</BasePath>
    <FileName>N/A</FileName>
    <NonCompliantComment>The guest user has CONNECT permissions within one or more databases.</NonCompliantComment>
    <CorrectiveComment>Revoke CONNECT permissions from the guest user in all SQL Server databases.</CorrectiveComment>
    <Correction>REVOKE CONNECT FROM guest;</Correction>
    <Verification>SELECT dp.name, dp.type_desc, p.state_desc, p.permission_name FROM sys.database_principals dp JOIN sys.database_permissions p ON dp.principal_id = p.grantee_principal_id WHERE dp.name = 'guest';</Verification>
    <Manual>NO</Manual>
  </Rule>

  <Rule id="3.3">
    <Name>Ensure no orphaned users exist</Name>
    <Chapter id="3">3 Authentication and Authorization</Chapter>
    <Profiles>
      <Profile level="1" type="Database Engine"/>
      <Profile level="1" type="AWS RDS"/>
    </Profiles>
    <BasePath>N/A</BasePath>
    <FileName>N/A</FileName>
    <NonCompliantComment>Orphaned users exist within SQL Server databases.</NonCompliantComment>
    <CorrectiveComment>Drop orphaned users from all SQL Server databases.</CorrectiveComment>
    <Correction>sp_change_users_login 'Report'; EXEC sp_change_users_login 'Auto_Fix', 'username';</Correction>
    <Verification>SELECT name FROM sys.database_principals WHERE type_desc = 'SQL_USER' AND sid IS NULL;</Verification>
    <Manual>NO</Manual>
  </Rule>

  <Rule id="3.4">
    <Name>Ensure SQL Authentication is disabled in contained databases</Name>
    <Chapter id="3">3 Authentication and Authorization</Chapter>
    <Profiles>
      <Profile level="1" type="Database Engine"/>
      <Profile level="1" type="AWS RDS"/>
    </Profiles>
    <BasePath>N/A</BasePath>
    <FileName>N/A</FileName>
    <NonCompliantComment>SQL Authentication is used in contained databases.</NonCompliantComment>
    <CorrectiveComment>Disable SQL Authentication in all contained databases.</CorrectiveComment>
    <Correction>ALTER DATABASE [DatabaseName] SET CONTAINMENT = NONE;</Correction>
    <Verification>SELECT name, containment FROM sys.databases WHERE containment = 1;</Verification>
    <Manual>CORRECTION</Manual>
  </Rule>

  <Rule id="3.5">
    <Name>Ensure MSSQL Service Account is not an administrator</Name>
    <Chapter id="3">3 Authentication and Authorization</Chapter>
    <Profiles>
      <Profile level="1" type="Database Engine"/>
      <Profile level="1" type="AWS RDS"/>
    </Profiles>
    <BasePath>N/A</BasePath>
    <FileName>N/A</FileName>
    <NonCompliantComment>The MSSQL Service Account has administrative privileges.</NonCompliantComment>
    <CorrectiveComment>Ensure the MSSQL Service Account is not an administrator on the system.</CorrectiveComment>
    <Manual>YES</Manual>
  </Rule>

  <Rule id="3.6">
    <Name>Ensure SQLAgent Service Account is not an administrator</Name>
    <Chapter id="3">3 Authentication and Authorization</Chapter>
    <Profiles>
      <Profile level="1" type="Database Engine"/>
      <Profile level="1" type="AWS RDS"/>
    </Profiles>
    <BasePath>N/A</BasePath>
    <FileName>N/A</FileName>
    <NonCompliantComment>The SQLAgent Service Account has administrative privileges.</NonCompliantComment>
    <CorrectiveComment>Ensure the SQLAgent Service Account is not an administrator on the system.</CorrectiveComment>
    <Manual>YES</Manual>
  </Rule>

  <Rule id="3.7">
    <Name>Ensure Full-Text Service Account is not an administrator</Name>
    <Chapter id="3">3 Authentication and Authorization</Chapter>
    <Profiles>
      <Profile level="1" type="Database Engine"/>
      <Profile level="1" type="AWS RDS"/>
    </Profiles>
    <BasePath>N/A</BasePath>
    <FileName>N/A</FileName>
    <NonCompliantComment>The Full-Text Service Account has administrative privileges.</NonCompliantComment>
    <CorrectiveComment>Ensure the Full-Text Service Account is not an administrator on the system.</CorrectiveComment>
    <Manual>YES</Manual>
  </Rule>

  <Rule id="3.8">
    <Name>Ensure public server role has only default permissions</Name>
    <Chapter id="3">3 Authentication and Authorization</Chapter>
    <Profiles>
      <Profile level="1" type="Database Engine"/>
      <Profile level="1" type="AWS RDS"/>
    </Profiles>
    <BasePath>N/A</BasePath>
    <FileName>N/A</FileName>
    <NonCompliantComment>The public server role has more permissions than the default settings.</NonCompliantComment>
    <CorrectiveComment>Revoke unnecessary permissions from the public server role.</CorrectiveComment>
    <Correction>REVOKE SELECT ON sys.tables FROM public;</Correction>
    <Verification>SELECT * FROM fn_my_permissions(NULL, 'SERVER');</Verification>
    <Manual>NO</Manual>
  </Rule>

  <Rule id="3.9">
    <Name>Ensure BUILTIN Windows groups are not SQL Server logins</Name>
    <Chapter id="3">3 Authentication and Authorization</Chapter>
    <Profiles>
      <Profile level="1" type="Database Engine"/>
      <Profile level="1" type="AWS RDS"/>
    </Profiles>
    <BasePath>N/A</BasePath>
    <FileName>N/A</FileName>
    <NonCompliantComment>Windows BUILTIN groups are SQL Logins, increasing the risk of unauthorized access.</NonCompliantComment>
    <CorrectiveComment>Remove Windows BUILTIN groups from SQL Server logins.</CorrectiveComment>
    <Correction>DROP LOGIN [BUILTIN\Administrators];</Correction>
    <Verification>SELECT name FROM sys.server_principals WHERE name LIKE 'BUILTIN%';</Verification>
    <Manual>NO</Manual>
  </Rule>

  <Rule id="3.10">
    <Name>Ensure Windows local groups are not SQL Server logins</Name>
    <Chapter id="3">3 Authentication and Authorization</Chapter>
    <Profiles>
      <Profile level="1" type="Database Engine"/>
      <Profile level="1" type="AWS RDS"/>
    </Profiles>
    <BasePath>N/A</BasePath>
    <FileName>N/A</FileName>
    <NonCompliantComment>Windows local groups are SQL Logins, increasing the risk of unauthorized access.</NonCompliantComment>
    <CorrectiveComment>Remove Windows local groups from SQL Server logins.</CorrectiveComment>
    <Correction>DROP LOGIN [<LocalGroupName>];</Correction>
    <Verification>SELECT name FROM sys.server_principals WHERE name LIKE '%\\%';</Verification>
    <Manual>CORRECTION</Manual>
  </Rule>

  <Rule id="3.11">
    <Name>Ensure public role in msdb does not have access to SQL Agent proxies</Name>
    <Chapter id="3">3 Authentication and Authorization</Chapter>
    <Profiles>
      <Profile level="1" type="Database Engine"/>
    </Profiles>
    <BasePath>N/A</BasePath>
    <FileName>N/A</FileName>
    <NonCompliantComment>The public role in the msdb database has access to SQL Agent proxies.</NonCompliantComment>
    <CorrectiveComment>Revoke access to SQL Agent proxies for the public role in the msdb database.</CorrectiveComment>
    <Correction>REVOKE EXECUTE ON msdb.dbo.sp_add_proxy FROM public;</Correction>
    <Verification>SELECT * FROM msdb.dbo.sysproxylogins WHERE name='public';</Verification>
    <Manual>NO</Manual>
  </Rule>

  <Rule id="3.12">
    <Name>Ensure only authorized users are members of the SYSADMIN role</Name>
    <Chapter id="3">3 Authentication and Authorization</Chapter>
    <Profiles>
      <Profile level="1" type="Database Engine"/>
    </Profiles>
    <BasePath>N/A</BasePath>
    <FileName>N/A</FileName>
    <NonCompliantComment>The 'SYSADMIN' role is assigned to accounts that are not administrative or built-in accounts.</NonCompliantComment>
    <CorrectiveComment>Ensure the 'SYSADMIN' role is limited to administrative or built-in accounts only.</CorrectiveComment>
    <Manual>YES</Manual>
  </Rule>

  <Rule id="3.13">
    <Name>Ensure admin roles in msdb are limited to authorized users</Name>
    <Chapter id="3">3 Authentication and Authorization</Chapter>
    <Profiles>
      <Profile level="1" type="Database Engine"/>
    </Profiles>
    <BasePath>N/A</BasePath>
    <FileName>N/A</FileName>
    <NonCompliantComment>Membership in admin roles in the MSDB database is not limited, increasing security risks.</NonCompliantComment>
    <CorrectiveComment>Limit membership in admin roles in the MSDB database to authorized accounts only.</CorrectiveComment>
    <Correction>USE msdb; EXEC sp_droprolemember 'SQLAgentOperatorRole', 'unauthorized_user';</Correction>
    <Verification>SELECT name,role_principal_id FROM msdb.sys.database_role_members;</Verification>
    <Manual>NO</Manual>
  </Rule>
</RulesCIS>
